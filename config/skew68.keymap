/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    // 定义旋钮
    // 定义旋钮

    keymap0: keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |   DEL    |
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |  PGUP    |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |  PGDN    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |   SHIFT   |   UP   |  WIN   |
            // |  CTL  |  fn  |  ALT  |    SPACE                SPACE    |  ALT  |  CTL  |  LEFT |  DOWN  | RIGHT  |
            // -----------------------------------------------------------------------------------------------------

            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &kp N3  &kp N4  &kp N5  &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &kp BSPC  &kp DEL
&kp TAB          &kp Q            &kp W            &kp E   &kp R   &kp T   &kp Y      &kp U   &kp I      &kp O    &kp P     &kp LBKT   &kp RBKT   &kp BSLH  &kp PGUP
&kp CLCK         &kp A            &kp S            &kp D   &kp F   &kp G   &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp SQT               &kp RET   &kp PGDN
&kp LSHFT        &kp Z            &kp X            &kp C   &kp V   &kp B   &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT             &kp UP    &kp LGUI
&kp LCTRL        &mo 1            &kp LALT                                 &kp SPACE                              &kp RALT  &kp RCTRL  &kp LEFT   &kp DOWN  &kp RIGHT
            >;

            // 定义旋钮

            sensor-bindings = <&inc_dec_kp A B>;

            // 定义旋钮
        };

        fn_layer {
            // ------------------------------------------------------------------------------------------------------
            // | ~   |  F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 |  F11 |  F12 |  BT_CLR   |  BOOT  |
            // | TAB | BT1 |  BT2 |  BT3 |  R  |  T  |  Y  |  U  |  INS  |  O  |  PB  |  [  |  ]  |   "|"  |  VOLUP |
            // | CAPS  |  A  |  SLCK  |  D  |  F  |  G  | HOME|  J  |  K  |  L  |  ;  |  '  |     ENTER    |  VOLDN |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  END |  M  |  ,  |  .  |  /  |   SHIFT   |   UP   |  WIN   |
            // |  CTL  |  fn  |  ALT  |            trans USB/BT          |  ALT  |  CTL  |  LEFT  |  DOWN  | RIGHT  |
            // ------------------------------------------------------------------------------------------------------

            bindings = <
&kp GRAVE  &kp F1        &kp F2        &kp F3        &kp F4  &kp F5  &kp F6        &kp F7  &kp F8     &kp F9   &kp F10          &kp F11    &kp F12   &bt BT_CLR  &bootloader
&kp TAB    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp R   &kp T   &kp Y         &kp U   &kp INS    &kp O    &kp PAUSE_BREAK  &kp LBKT   &kp RBKT  &kp BSLH    &kp C_VOL_UP
&kp CLCK   &kp A         &kp SLCK      &kp D         &kp F   &kp G   &kp HOME      &kp J   &kp K      &kp L    &kp SEMI         &kp SQT              &kp RET     &kp C_VOL_DN
&kp LSHFT  &kp Z         &kp X         &kp C         &kp V   &kp B   &kp END       &kp M   &kp COMMA  &kp DOT  &kp FSLH         &kp RSHFT            &kp UP      &kp LGUI
&kp LCTRL  &trans        &kp LALT                                    &out OUT_TOG                              &kp RALT         &kp RCTRL  &kp LEFT  &kp DOWN    &kp RIGHT
            >;

            // 定义旋钮

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;

            // 定义旋钮
        };
    };
};
